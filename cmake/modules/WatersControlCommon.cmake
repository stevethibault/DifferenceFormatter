set(BUILD_DIRECTORY "${ROOT}/build/mako/\$(Configuration)")
set(SDKS_DIRECTORY "${ROOT}/build/sdks/\$(Configuration)")
set(TEST_DIRECTORY "${ROOT}/bin")


include_directories("${ROOT}/include")
include_directories("${ROOT}/include/sdks")
link_directories(${SDKS_DIRECTORY}/lib ${BUILD_DIRECTORY})

set(CMAKE_LIBRARY_OUTPUT_DIRECTORY "${BUILD_DIRECTORY}")
set(CMAKE_ARCHIVE_OUTPUT_DIRECTORY "${BUILD_DIRECTORY}")
set(CMAKE_RUNTIME_OUTPUT_DIRECTORY "${BUILD_DIRECTORY}")

foreach( OUTPUTCONFIG ${CMAKE_CONFIGURATION_TYPES} )
    string( TOUPPER ${OUTPUTCONFIG} OUTPUTCONFIG )
    set( CMAKE_RUNTIME_OUTPUT_DIRECTORY_${OUTPUTCONFIG} ${BUILD_DIRECTORY} )
    set( CMAKE_LIBRARY_OUTPUT_DIRECTORY_${OUTPUTCONFIG} ${BUILD_DIRECTORY} )
    set( CMAKE_ARCHIVE_OUTPUT_DIRECTORY_${OUTPUTCONFIG} ${BUILD_DIRECTORY} )
endforeach( OUTPUTCONFIG CMAKE_CONFIGURATION_TYPES )

if (UNIX)
set(POCO_FOUNDATION_LIB PocoFoundation)
set(POCO_UTIL_LIB PocoUtil)
set(POCO_XML_LIB PocoXML)
set(POCO_NET_LIB PocoNET)
set(THREADS rt pthread dl)
endif()


set(SDKS_LIBS ${POCO_FOUNDATION_LIB} ${POCO_UTIL_LIB} ${POCO_XML_LIB} ${PROTOBUF_LIB} ${THREADS})


include(CopyInclude)
include(CopyBinaries)
include(Tracing)

if (WIN32)
	add_definitions(-D_SCL_SECURE_NO_WARNINGS -D_CRT_SECURE_NO_WARNINGS -DNOMINMAX)
elseif (UNIX)
	execute_process(COMMAND ${CMAKE_C_COMPILER} -dumpversion OUTPUT_VARIABLE GCC_VERSION)
  if (GCC_VERSION VERSION_GREATER 4.9 OR GCC_VERSION VERSION_EQUAL 4.9)
    set(CMAKE_CXX_FLAGS -std=c++1y)
	elseif (GCC_VERSION VERSION_GREATER 4.7 OR GCC_VERSION VERSION_EQUAL 4.7)
    set(CMAKE_CXX_FLAGS -std=c++11)
	else()
		set(CMAKE_CXX_FLAGS -std=c++0x)
	endif()
endif()
