diff --recursive --expand-tabs --tabsize=2 --unified=10 C:\Q\ICS\Instruments\TUV\CoreTUV/Console/ConsoleCoreTUV/CoreTUVDetectorResources.cs C:\Q\ICS\FirstPartyInstruments\TUV\CoreTUV/Console/ConsoleCoreTUV/CoreTUVDetectorResources.cs
--- C:\Q\ICS\Instruments\TUV\CoreTUV/Console/ConsoleCoreTUV/CoreTUVDetectorResources.cs	2014-11-05 10:02:16.000000000 -0500
+++ C:\Q\ICS\FirstPartyInstruments\TUV\CoreTUV/Console/ConsoleCoreTUV/CoreTUVDetectorResources.cs	2014-09-19 15:21:26.000000000 -0400
@@ -23,25 +23,23 @@
             ResourceManager rm = new System.Resources.ResourceManager(nm, a);
             return rm;
         }

     public static void Initialize(Assembly a)
       {
       if (rm == null)
         {
         assy = a;

-        string rescoll = identityInfo.GetIdentityString("ResourceCollection");
-        if (!string.IsNullOrEmpty(rescoll))
-            name = rescoll;
-        else
-            name = "Waters.ACQUITY." + identityInfo.ConsoleAssy;
+        //AssemblyName assyName = new AssemblyName(a.FullName);
+        //name = assyName.Name;
+        name = "Waters.ACQUITY." + identityInfo.ConsoleAssy;
 #if TUV140_COMPATIBLE
         name = name.Replace("140", "");
 #endif

         rm = _Initialize(name, assy);

         //AddICSResources( tuvType, icsToken, icsResourceFileName );
         if ((identityInfo != null) && identityInfo.IsValid)
           AddICSResources(identityInfo.InstrumentType, identityInfo.FilenameRoot, identityInfo.CoreResources, identityInfo.Resources);
         }
